def run_margin_service():
    st.markdown(
        """
        <style>
        .margin-container {
            max-width: 750px !important;  /* –ò–ª–∏ –≤–∞—à–µ —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, 1200px */
            margin: 0 auto !important;
            padding: 20px !important;
        }
        /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–æ–ª–æ–Ω–æ–∫ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */
        .margin-container .stColumns > div {
            flex: 1 !important;
            min-width: 0 !important;
            max-width: 50% !important;  /* –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫ */
            display: flex !important;    /* –î–æ–±–∞–≤–ª—è–µ–º flex –¥–ª—è –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–≥–æ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è */
            flex-direction: column !important;  /* –°—Ç–µ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ */
            justify-content: center !important; /* –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ */
            align-items: stretch !important;    /* –†–∞—Å—Ç—è–≥–∏–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –≤—ã—Å–æ—Ç–µ */
        }
        /* –°—Ç–∏–ª–∏ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ–ª–æ–Ω–æ–∫ (–ø–æ–ª—è –≤–≤–æ–¥–∞, –∫–Ω–æ–ø–∫–∏ –∏ —Ç.–¥.) */
        .margin-container .stNumberInput, 
        .margin-container .stTextInput, 
        .margin-container .stSelectbox {
            width: 100% !important;
            margin: 0 !important;
            height: 40px !important;  /* –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è –ø–æ–ª–µ–π */
        }
        .margin-container div[data-testid="stNumberInput"] input,
        .margin-container div[data-testid="stTextInput"] input,
        .margin-container div[data-testid="stSelectbox"] select {
            width: 100% !important;
            min-height: 40px !important;  /* –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ */
            padding: 4px 6px !important;
            font-size: 14px !important;
            box-sizing: border-box !important;  /* –£—á–∏—Ç—ã–≤–∞–µ–º padding –≤ –æ–±—â–µ–π —à–∏—Ä–∏–Ω–µ */
            line-height: 1.5 !important;  /* –£–Ω–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –≤—ã—Å–æ—Ç—É —Ç–µ–∫—Å—Ç–∞ */
        }
        /* –°—Ç–∏–ª–∏ –¥–ª—è –º–µ—Ç–æ–∫ (markdown) –≤–Ω—É—Ç—Ä–∏ –∫–æ–ª–æ–Ω–æ–∫ */
        .margin-container p {
            margin: 0 !important;
            font-size: 14px !important;
            line-height: 1.2 !important;
            height: 20px !important;  /* –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è –º–µ—Ç–æ–∫ */
            display: flex !important;
            align-items: center !important;  /* –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ */
        }
        /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Ñ–æ—Ä–º—ã */
        .margin-container div.stButton > button {
            width: 100% !important;
            margin-top: 10px !important;
            padding: 10px !important;
            height: 40px !important;  /* –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ */
        }
        /* –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã —É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ */
        .margin-container .stForm {
            padding: 0 !important;
        }
        </style>
        <div class="margin-container">
        """,
        unsafe_allow_html=True
    )

    with st.expander("üìå –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞"):
        col1, col2 = st.columns(2)
        with col1:
            client_name = st.text_input("–§–ò–û –∫–ª–∏–µ–Ω—Ç–∞")
            client_company = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏")
            client_bin = st.text_input("–ë–ò–ù –∫–ª–∏–µ–Ω—Ç–∞")
        with col2:
            client_phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞")
            client_address = st.text_input("–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏")
            client_contract = st.text_input("–î–æ–≥–æ–≤–æ—Ä (‚Ññ)", placeholder="–ë–µ–∑ –¥–æ–≥–æ–≤–æ—Ä–∞")

    with st.expander("üìå –î–∞–Ω–Ω—ã–µ –ø–æ —Å–¥–µ–ª–∫–µ"):
        col1, col2 = st.columns(2)
        with col1:
            total_logistics = st.number_input("–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ª–æ–≥–∏—Å—Ç–∏–∫–∏ (‚Ç∏)", min_value=0, value=0, format="%d")
        with col2:
            kickback = st.number_input("–û—Ç–∫–∞—Ç –∫–ª–∏–µ–Ω—Ç—É (‚Ç∏)", min_value=0, value=0, format="%d")

    if "products" not in st.session_state:
        st.session_state.products = []

    st.subheader("üõí –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤")
    with st.form("add_product_form"):
        col_left, col_right = st.columns(2)
        with col_left:
            st.markdown("–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
            name = st.text_input("", key="name", label_visibility="collapsed")
            st.markdown("–ï–¥. –∏–∑–º–µ—Ä–µ–Ω–∏—è")
            unit = st.selectbox("", ["—à—Ç", "–º", "–∫–≥", "–∫–º", "–±—É—Ö—Ç–∞", "—Ä—É–ª–æ–Ω", "–º¬≤", "—Ç–æ–Ω–Ω–∞"], 
                                key="unit", label_visibility="collapsed")
            st.markdown("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ")
            quantity = st.number_input("", min_value=1, value=1, key="quantity", label_visibility="collapsed")
            st.markdown("–í–µ—Å (–∫–≥)")
            weight = st.number_input("", min_value=0, value=0, format="%d", key="weight", label_visibility="collapsed")
            st.markdown("‚†Ä")  # –ü—É—Å—Ç–∞—è –º–µ—Ç–∫–∞ –¥–ª—è –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è

        with col_right:
            row1_col1, row1_col2 = st.columns(2)
            with row1_col1:
                st.markdown('<p style="font-size:14px; margin-bottom:0px;">–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 1 (‚Ç∏)</p>', unsafe_allow_html=True)
                price1 = st.number_input("", min_value=0, value=0, format="%d", key="price_1", label_visibility="collapsed")
            with row1_col2:
                st.markdown("‚†Ä")
                comment1 = st.text_input("", placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", key="comm_1", label_visibility="collapsed")

            row2_col1, row2_col2 = st.columns(2)
            with row2_col1:
                st.markdown('<p style="font-size:14px; margin-bottom:0px;">–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 2 (‚Ç∏)</p>', unsafe_allow_html=True)
                price2 = st.number_input("", min_value=0, value=0, format="%d", key="price_2", label_visibility="collapsed")
            with row2_col2:
                st.markdown("‚†Ä")
                comment2 = st.text_input("", placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", key="comm_2", label_visibility="collapsed")

            row3_col1, row3_col2 = st.columns(2)
            with row3_col1:
                st.markdown('<p style="font-size:14px; margin-bottom:0px;">–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 3 (‚Ç∏)</p>', unsafe_allow_html=True)
                price3 = st.number_input("", min_value=0, value=0, format="%d", key="price_3", label_visibility="collapsed")
            with row3_col2:
                st.markdown("‚†Ä")
                comment3 = st.text_input("", placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", key="comm_3", label_visibility="collapsed")

            row4_col1, row4_col2 = st.columns(2)
            with row4_col1:
                st.markdown('<p style="font-size:14px; margin-bottom:0px;">–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 4 (‚Ç∏)</p>', unsafe_allow_html=True)
                price4 = st.number_input("", min_value=0, value=0, format="%d", key="price_4", label_visibility="collapsed")
            with row4_col2:
                st.markdown("‚†Ä")
                comment4 = st.text_input("", placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", key="comm_4", label_visibility="collapsed")

            row5_col1, _, _ = st.columns([2,1,2])
            with row5_col1:
                st.markdown("–ù–∞—Ü–µ–Ω–∫–∞ (%)")
                markup = st.number_input("", min_value=0, value=20, format="%d", key="markup", label_visibility="collapsed")

        submit_btn = st.form_submit_button("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä")

    if submit_btn:
        if st.session_state.name.strip():
            st.session_state.products.append({
                "–¢–æ–≤–∞—Ä": st.session_state.name,
                "–ï–¥_–∏–∑–º–µ—Ä–µ–Ω–∏—è": st.session_state.unit,
                "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": st.session_state.quantity,
                "–í–µ—Å (–∫–≥)": st.session_state.weight,
                "–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 1": st.session_state.price_1,
                "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 1": st.session_state.comm_1,
                "–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 2": st.session_state.price_2,
                "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 2": st.session_state.comm_2,
                "–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 3": st.session_state.price_3,
                "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 3": st.session_state.comm_3,
                "–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 4": st.session_state.price_4,
                "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 4": st.session_state.comm_4,
                "–ù–∞—Ü–µ–Ω–∫–∞ (%)": st.session_state.markup,
            })
            st.rerun()
        else:
            st.warning("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ‚ö†Ô∏è ")

    st.subheader("üì¶ –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤")
    if not st.session_state.products:
        st.info("–¢–æ–≤–∞—Ä—ã –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã‚ùó")
    else:
        for index, product in enumerate(st.session_state.products):
            supplier_prices = [
                p for p in [
                    product["–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 1"],
                    product["–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 2"],
                    product["–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 3"],
                    product["–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 4"],
                ] if p > 0
            ]
            min_supplier_price = min(supplier_prices, default=0)
            max_supplier_price = max(supplier_prices, default=0)
            price_for_client = min_supplier_price * (1 + product["–ù–∞—Ü–µ–Ω–∫–∞ (%)"] / 100)
            revenue = price_for_client * product["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"]
            cost_price = min_supplier_price * product["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"]
            margin = revenue - cost_price

            with st.expander(f"üõí {product['–¢–æ–≤–∞—Ä']} ({product['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ']} {product['–ï–¥_–∏–∑–º–µ—Ä–µ–Ω–∏—è']})"):
                col1, col2 = st.columns(2)
                with col1:
                    st.write(f"**–¶–µ–Ω–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ (–∏—Ç–æ–≥–æ):** {int(revenue):,} ‚Ç∏")
                    st.write(f"**–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å:** {int(cost_price):,} ‚Ç∏")
                    st.write(f"**–ù–∞—à–∞ –º–∞—Ä–∂–∞:** {int(margin):,} ‚Ç∏")
                    st.write(f"**–ù–∞—Ü–µ–Ω–∫–∞:** {product['–ù–∞—Ü–µ–Ω–∫–∞ (%)']}%")
                with col2:
                    st.write(f"**–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (–º–∏–Ω ‚Äì –º–∞–∫—Å):** {int(min_supplier_price):,} ‚Äì {int(max_supplier_price):,} ‚Ç∏")
                    st.write(f"**–¶–µ–Ω–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ (–∑–∞ –µ–¥.):** {int(price_for_client):,} ‚Ç∏")
                    if st.button("‚ùå –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä", key=f"del_{index}"):
                        st.session_state.products.pop(index)
                        st.rerun()

    if st.button("üìä –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –º–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å"):
        if not st.session_state.products:
            st.warning("‚ö†Ô∏è –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç. –î–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä.")
        else:
            df = pd.DataFrame(st.session_state.products)
            df["–ú–∏–Ω. —Ü–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"] = df[
                [
                    "–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 1",
                    "–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 2",
                    "–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 3",
                    "–¶–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ 4",
                ]
            ].replace(0, float("inf")).min(axis=1).replace(float("inf"), 0)

            df["–¶–µ–Ω–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞"] = df["–ú–∏–Ω. —Ü–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"] * (1 + df["–ù–∞—Ü–µ–Ω–∫–∞ (%)"] / 100)
            df["–í—ã—Ä—É—á–∫–∞"] = df["–¶–µ–Ω–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞"] * df["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"]
            df["–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å"] = df["–ú–∏–Ω. —Ü–µ–Ω–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"] * df["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"]
            df["–ü—Ä–∏–±—ã–ª—å"] = df["–í—ã—Ä—É—á–∫–∞"] - df["–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å"]
            df["–ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å (%)"] = df["–ü—Ä–∏–±—ã–ª—å"] / df["–í—ã—Ä—É—á–∫–∞"] * 100

            tax_delivery = total_logistics * 0.15
            tax_kickback = kickback * 0.32
            tax_nds = df["–ü—Ä–∏–±—ã–ª—å"].sum() * 12 / 112
            net_margin = df["–ü—Ä–∏–±—ã–ª—å"].sum() - total_logistics - kickback - tax_delivery - tax_kickback - tax_nds
            manager_bonus = net_margin * 0.2

            st.subheader("üìä –ò—Ç–æ–≥–æ–≤—ã–π —Ä–∞—Å—á—ë—Ç")
            col1, col2, col3 = st.columns(3)
            with col1:
                st.metric("üí∞ –í—ã—Ä—É—á–∫–∞", f"{int(df['–í—ã—Ä—É—á–∫–∞'].sum()):,} ‚Ç∏")
                st.metric("üìä –ù–∞—à–∞ –º–∞—Ä–∂–∞ (–Ω–∞—Ü–µ–Ω–∫–∞)", f"{int(df['–ü—Ä–∏–±—ã–ª—å'].sum()):,} ‚Ç∏")
            with col2:
                st.metric("üí∞ –ß–∏—Å—Ç—ã–π –º–∞—Ä–∂–∏–Ω–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥", f"{int(net_margin):,} ‚Ç∏")
                st.metric("üèÜ –ë–æ–Ω—É—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (20%)", f"{int(manager_bonus):,} ‚Ç∏")
            with col3:
                total_revenue = df["–í—ã—Ä—É—á–∫–∞"].sum()
                marz_percent = net_margin / total_revenue * 100 if total_revenue > 0 else 0
                st.metric("üìà –ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å (%)", f"{max(0, marz_percent):.2f} %")

            st.write("### üõë –†–∞—Å—Ö–æ–¥—ã")
            st.text(f"üöö –õ–æ–≥–∏—Å—Ç–∏–∫–∞: {int(total_logistics):,} ‚Ç∏")
            st.text(f"üíµ –û—Ç–∫–∞—Ç –∫–ª–∏–µ–Ω—Ç—É: {int(kickback):,} ‚Ç∏")
            st.text(f"üìä –ù–∞–ª–æ–≥ –Ω–∞ –æ–±–Ω–∞–ª (15%) (–ª–æ–≥–∏—Å—Ç–∏–∫–∞): {int(tax_delivery):,} ‚Ç∏")
            st.text(f"üí∏ –ù–∞–ª–æ–≥ –Ω–∞ –æ–±–Ω–∞–ª (32%) (–æ—Ç–∫–∞—Ç): {int(tax_kickback):,} ‚Ç∏")
            st.text(f"üìä –ù–∞–ª–æ–≥ –ù–î–° –æ—Ç –º–∞—Ä–∂–∏ (12%): {int(tax_nds):,} ‚Ç∏")

            output = io.BytesIO()
            with pd.ExcelWriter(output, engine="xlsxwriter") as writer:
                client_data = pd.DataFrame({
                    "–ü–æ–ª–µ": ["–§–ò–û –∫–ª–∏–µ–Ω—Ç–∞", "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏", "–ë–ò–ù –∫–ª–∏–µ–Ω—Ç–∞", 
                             "–¢–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞", "–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏", "–î–æ–≥–æ–≤–æ—Ä (‚Ññ)"],
                    "–ó–Ω–∞—á–µ–Ω–∏–µ": [client_name, client_company, client_bin, 
                                 client_phone, client_address, client_contract],
                })
                client_data.to_excel(writer, index=False, sheet_name="–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞")

                deal_data = pd.DataFrame({
                    "–ü–æ–ª–µ": ["–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ª–æ–≥–∏—Å—Ç–∏–∫–∏", "–û—Ç–∫–∞—Ç –∫–ª–∏–µ–Ω—Ç—É"],
                    "–ó–Ω–∞—á–µ–Ω–∏–µ (‚Ç∏)": [total_logistics, kickback],
                })
                deal_data.to_excel(writer, index=False, sheet_name="–î–∞–Ω–Ω—ã–µ —Å–¥–µ–ª–∫–∏")

                df.to_excel(writer, index=False, sheet_name="–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤")

                final_data = pd.DataFrame({
                    "–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å": [
                        "–í—ã—Ä—É—á–∫–∞",
                        "–ù–∞—à–∞ –º–∞—Ä–∂–∞ (–∏—Ç–æ–≥)",
                        "–ß–∏—Å—Ç—ã–π –º–∞—Ä–∂–∏–Ω–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥",
                        "–ë–æ–Ω—É—Å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (20%)",
                        "–õ–æ–≥–∏—Å—Ç–∏–∫–∞",
                        "–û—Ç–∫–∞—Ç –∫–ª–∏–µ–Ω—Ç—É",
                        "–ù–∞–ª–æ–≥ –Ω–∞ –æ–±–Ω–∞–ª (15%)",
                        "–ù–∞–ª–æ–≥ –Ω–∞ –æ–±–Ω–∞–ª (32%)",
                        "–ù–∞–ª–æ–≥ –ù–î–° (12%)",
                        "–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ (net_margin)",
                    ],
                    "–ó–Ω–∞—á–µ–Ω–∏–µ (‚Ç∏)": [
                        df["–í—ã—Ä—É—á–∫–∞"].sum(),
                        df["–ü—Ä–∏–±—ã–ª—å"].sum(),
                        net_margin,
                        manager_bonus,
                        total_logistics,
                        kickback,
                        tax_delivery,
                        tax_kickback,
                        tax_nds,
                        net_margin,
                    ],
                })
                final_data.to_excel(writer, index=False, sheet_name="–†–∞—Å—á–µ—Ç+–†–∞—Å—Ö–æ–¥—ã")

            st.download_button(
                "üì• –°–∫–∞—á–∞—Ç—å —Ä–∞—Å—á—ë—Ç –≤ Excel",
                data=output.getvalue(),
                file_name="margin_calculation.xlsx",
                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            )

            unique_invoice_number = get_next_invoice_number(prefix="INV")
            pdf_path = generate_invoice_gos(
                invoice_number=unique_invoice_number,
                invoice_date="placeholder",
                supplier_name="–¢–û–û OOK-STORE",
                supplier_bin="170740032780",
                supplier_address="–≥. –ê–ª–º–∞—Ç—ã, —É–ª. –ë–µ—Ä–µ–∑–æ–≤—Å–∫–æ–≥–æ 19",
                supplier_bank_name="Kaspi Bank",
                supplier_iik="KZ11722S000024087169",
                supplier_bik="CASPKZKA",
                client_name=client_name,
                client_company=client_company,
                client_bin=client_bin,
                client_phone=client_phone,
                client_address=client_address,
                contract_number=client_contract,
                df=df,
                total_logistics=total_logistics,
                kickback=kickback,
                tax_delivery=tax_delivery,
                tax_kickback=tax_kickback,
                tax_nds=tax_nds,
                net_margin=net_margin,
            )
            with open(pdf_path, "rb") as f:
                st.download_button(
                    "üì• –°–∫–∞—á–∞—Ç—å —Å—á–µ—Ç (–≥–æ—Å)",
                    data=f,
                    file_name="invoice_gos_full.pdf",
                    mime="application/pdf",
                )

    st.markdown("</div>", unsafe_allow_html=True)
